# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: CleanUP
        run: |
            docker rmi -f $(docker images -q)
            wget -q https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh 
            sudo apt autopurge firefox -y
            
      # Runs a set of commands using the runners shell
      - name: Install dep
        run: |
          sudo apt update
          sudo apt-get install --no-install-recommends -y binutils autopoint libpam0g-dev libncurses-dev libssl-dev libelf-dev gettext m4 automake autoconf libtool binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3 aria2

      - name: Checkout Linux
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          repository: torvalds/linux
          path: linux
          fetch-depth: 2

      - name: setup linux
        run: |
          mkdir -p /home/runner/disk
          mkdir -p /home/runner/disk/boot
          mkdir -p /home/runner/disk/etc
          mkdir -p /home/runner/disk/usr
          mkdir -p /home/runner/disk/usr/bin
          mkdir -p /home/runner/disk/usr/lib
          mkdir -p /home/runner/disk/var
          mkdir -p /home/runner/disk/dev
          mkdir -p /home/runner/disk/proc
          mkdir -p /home/runner/disk/sys
          ln -sf /home/runner/disk/usr/bin /home/runner/disk/bin
          ln -sf /home/runner/disk/usr/lib /home/runner/disk/lib

      - name: compile linux
        if: github.event_name == 'workflow_dispatch'
        run: |          
          mkdir -p linux/out
          make -j4 -C linux O=out x86_64_defconfig
          make -j4 -C linux O=out 
          mkdir -p /home/runner/image/boot
          test -d linux/out/arch/x86/boot/bzImage || cp linux/out/arch/x86/boot/bzImage /home/runner/disk/boot/
          make -j4 -C linux O=out modules_install INSTALL_PATH="/home/runner/disk/boot/" INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="/home/runner/disk"
          rm -f /home/runner/disk/lib/modules/*/build /home/runner/disk/lib/modules/*/source
          rm -rf linux

      - name: Checkout Busybox
        uses: actions/checkout@v4
        with:
          repository: mirror/busybox
          path: busybox
          fetch-depth: 2
          
      - name: compile busybox
        run: |
          #wget https://github.com/dpkg123/toolchain_build/raw/dpkg123-patch-1/configs/coreutils_defconfig -O busybox/configs/1_defconfig
          mkdir busybox/out
          mkdir /home/runner/disk/busybox
          make -C busybox O=out defconfig
          make -j4 -C busybox O=out
          make install -C busybox O=out INSTALL_PATH=/home/runner/disk/busybox

      - name: Checkout Git
        uses: actions/checkout@v4
        with:
          repository: git/git
          path: git
          fetch-depth: 2
          submodules: true

      - name: compile git
        run: |
          cd git
          make configure
          ./configure --prefix=/home/runner/disk
          make -j4
          make install
          cd ..
          rm -rf git
l

      - name: Checkout xz
        uses: actions/checkout@v4
        with:
          repository: tukaani-project/xz
          path: xz
          fetch-depth: 2
          
      - name: compile xz
        run: |
          cd xz
          bash autogen.sh
          ./configure --prefix=/home/runner/disk
          make -j4
          make install
          cd ..
          rm -rf xz

      - name: Checkout flex
        uses: actions/checkout@v4
        with:
          repository: westes/flex
          path: flex
          fetch-depth: 2
          
      - name: compile flex
        run: |
          cd flex
          ./autogen.sh
          ./configure --prefix=/home/runner/disk
          make -j4
          make install
          cd ..
          rm -rf flex

      - name: Checkout Coreutils
        uses: actions/checkout@v4
        with:
          repository: coreutils/coreutils
          path: coreutils
          fetch-depth: 2
          submodules: true
          
      - name: compile coreutils
        run: |
          cd coreutils
          ./bootstrap
          ./configure --prefix=/home/runner/disk
          make -j4
          make install
          cd ..
          rm -rf coreutils

      - name: Checkout Bash
        uses: actions/checkout@v4
        with:
          repository: bminor/bash
          path: bash
          fetch-depth: 2
          
      - name: compile bash
        run: |
          cd bash
          ./configure --prefix=/home/runner/disk
          make -j4
          make install
          cd ..
          rm -rf bash

      - run: bash curl -SsL https://github.com/dpkg123/toolchain_build/raw/dpkg123-patch-1/scripts/build_electron_toolchain.sh | bash
